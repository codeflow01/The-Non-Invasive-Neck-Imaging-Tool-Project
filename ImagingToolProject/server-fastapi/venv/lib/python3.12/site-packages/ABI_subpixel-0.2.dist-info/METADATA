Metadata-Version: 2.1
Name: ABI-subpixel
Version: 0.2
Summary: subpixel registration code with basic multithreading
Home-page: https://github.com/ABI-Soft-Tissue-Instrumentation-Group/Robin_subpixel_registration
Author: Robin Laven
Author-email: rlav440@aucklanduni.ac.nz
License: UNKNOWN
Platform: UNKNOWN
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy
Requires-Dist: matplotlib
Requires-Dist: opencv-python
Requires-Dist: ray
Requires-Dist: scipy
Requires-Dist: multiprocess
Requires-Dist: roipoly

# ABI - SUBPIXEL REGISTRATOR
Python module registration of images.
Provides a basic interface for grid image registration.
Also provides access to the registration classes for registration of image points.
See the documentation for more information.

## Installation

1. This file builds as a python module
2. This can be found in .dists, and can be installed with 
3. pip install ABI_subpixel*.whl

This will install the repository as ABI_subpixel.

## Dependencies

All dependancies should be managed via pip installation.

## Accessing documentation

The documentation is found within docs, including a zipped version of the 
html documentation.

## Building documentation locally

### From the terminal
1. Clone the repository to your local machine.

2. Navigate to the docs/

3. Issue the command: `make html`

4. Open the index.html file in `docs/build/` folder

### From Pycharm
See the following [instructions](https://bioengineering-toolbox.readthedocs.io/en/latest/documentation/sphinx.html#adding-a-sphinx-build-configuration-to-pycharm).

## Contributing to documentation

### Updating the documentation
1. Fork this repository from an upstream repository to your github account (An Upstream repository is the Parent/Original repository from where you forked your repository)

2. Edit the restructuredText (.rst) or markdown (.md) files in the 
`docs/sources` folder (editing of these files can performed directly using the 
file editing tools provided by github. This will allow you to commit your 
changes to the repository.

3. Make a pull request from your fork to the master branch of the Upstream repository.

4. Your changes will be reviewed and pulled into the Upstream repository.

Over time, your fork may become out of sync with the master branch of the Upstream repository. Create a pull request on your fork to pull in the latest changes from the master branch of the Upstream repository to get your fork back up-to-date. This can be performed directly on the github website.



